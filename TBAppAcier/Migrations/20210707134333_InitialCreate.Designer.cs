// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TBAppAcier.AccesDonnees;

namespace TBAppAcier.Migrations
{
    [DbContext(typeof(AcierDbContext))]
    [Migration("20210707134333_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.ClasseSection", b =>
                {
                    b.Property<int>("IdClasseSection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClasseSectionCalculee")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContraintesElastiquesMaxIdContraintesElastiques")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ElancementEffectifAile")
                        .HasColumnType("REAL");

                    b.Property<double>("ElancementEffectifAme")
                        .HasColumnType("REAL");

                    b.Property<double>("ElancementLimiteAile")
                        .HasColumnType("REAL");

                    b.Property<double>("ElancementLimiteAme")
                        .HasColumnType("REAL");

                    b.Property<double>("HauteurComprimeeAme")
                        .HasColumnType("REAL");

                    b.Property<double>("LargeurComprimeeAile")
                        .HasColumnType("REAL");

                    b.Property<double>("PartEffortPlastiqueAile")
                        .HasColumnType("REAL");

                    b.Property<double>("PartEffortPlastiqueAme")
                        .HasColumnType("REAL");

                    b.Property<double>("RapportContraintePsiAile")
                        .HasColumnType("REAL");

                    b.Property<double>("RapportContraintePsiAme")
                        .HasColumnType("REAL");

                    b.Property<double>("Valeurintermediairek1")
                        .HasColumnType("REAL");

                    b.HasKey("IdClasseSection");

                    b.ToTable("ClasseSections");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.CoefficientsCTICM.C1ConcMuNeg", b =>
                {
                    b.Property<int>("IdC1ConcMuNeg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("MuNeg")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi00")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi01")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi02")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi03")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi04")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi05")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi06")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi07")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi08")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi09")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi10")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi11")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi12")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi13")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi14")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi15")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi16")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi17")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi18")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi19")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi20")
                        .HasColumnType("REAL");

                    b.HasKey("IdC1ConcMuNeg");

                    b.ToTable("C1ConcMuNegs");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.CoefficientsCTICM.C1ConcMuPos", b =>
                {
                    b.Property<int>("IdC1ConcMuPos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("MuPos")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi00")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi01")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi02")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi03")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi04")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi05")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi06")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi07")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi08")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi09")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi10")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi11")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi12")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi13")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi14")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi15")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi16")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi17")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi18")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi19")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi20")
                        .HasColumnType("REAL");

                    b.HasKey("IdC1ConcMuPos");

                    b.ToTable("C1ConcMuPos");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.CoefficientsCTICM.C2ConcMuNeg", b =>
                {
                    b.Property<int>("IdC2ConcMuNeg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("MuNeg")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi00")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi01")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi02")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi03")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi04")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi05")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi06")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi07")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi08")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi09")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi10")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi11")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi12")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi13")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi14")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi15")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi16")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi17")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi18")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi19")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi20")
                        .HasColumnType("REAL");

                    b.HasKey("IdC2ConcMuNeg");

                    b.ToTable("C2ConcMuNegs");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.CoefficientsCTICM.C2ConcMuPos", b =>
                {
                    b.Property<int>("IdC2ConcMuPos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("MuPos")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi00")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi01")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi02")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi03")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi04")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi05")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi06")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi07")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi08")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi09")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi10")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi11")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi12")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi13")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi14")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi15")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi16")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi17")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi18")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi19")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi20")
                        .HasColumnType("REAL");

                    b.HasKey("IdC2ConcMuPos");

                    b.ToTable("C2ConcMuPos");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.CombinaisonCharges1D", b =>
                {
                    b.Property<int>("IdCombinaisonCharges")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("ChargeConcentreMilieuTraveeQAxeY")
                        .HasColumnType("REAL");

                    b.Property<double>("ChargeConcentreMilieuTraveeQAxeZ")
                        .HasColumnType("REAL");

                    b.Property<double>("ChargeRepartieUniformeqAxeY")
                        .HasColumnType("REAL");

                    b.Property<double>("ChargeRepartieUniformeqAxeZ")
                        .HasColumnType("REAL");

                    b.Property<double>("EffortNormalNed")
                        .HasColumnType("REAL");

                    b.Property<double>("LongueurElement")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentMAxeYExtremiteE")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentMAxeYExtremiteO")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentMAxeZExtremiteE")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentMAxeZExtremiteO")
                        .HasColumnType("REAL");

                    b.HasKey("IdCombinaisonCharges");

                    b.ToTable("CombinaisonCharges1Ds");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.ContraintesElastiques1PointYZ", b =>
                {
                    b.Property<int>("IdContraintesElastiques")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClasseSectionCalculeIdClasseSection")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ContrainteComparaisonVonMises")
                        .HasColumnType("REAL");

                    b.Property<double>("ContrainteNormalSigmaX")
                        .HasColumnType("REAL");

                    b.Property<double>("ContrainteTangentielleTauZX")
                        .HasColumnType("REAL");

                    b.Property<double>("CoordonnéeY")
                        .HasColumnType("REAL");

                    b.Property<double>("CoordonnéeZ")
                        .HasColumnType("REAL");

                    b.HasKey("IdContraintesElastiques");

                    b.HasIndex("ClasseSectionCalculeIdClasseSection");

                    b.ToTable("ContraintesElastiques1PointYZ");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.DiagrammesEffortsInternes", b =>
                {
                    b.Property<int>("IdDiagrammeEffortsInternes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CombinaisonCharges1DSelectionneeIdCombinaisonCharges")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdDiagrammeEffortsInternes");

                    b.HasIndex("CombinaisonCharges1DSelectionneeIdCombinaisonCharges");

                    b.ToTable("DiagrammesEffortsInternes");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.EffortTranchant", b =>
                {
                    b.Property<int>("IdEffortTranchant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CoefficientVoilementCisaillementZ")
                        .HasColumnType("REAL");

                    b.Property<double>("ContrainteCritiqueCisaillementZ")
                        .HasColumnType("REAL");

                    b.Property<double>("RésistanceCisaillementMinZ")
                        .HasColumnType("REAL");

                    b.Property<double>("RésistanceCisaillementZ")
                        .HasColumnType("REAL");

                    b.Property<double>("RésistanceVoilementCisaillementZ")
                        .HasColumnType("REAL");

                    b.HasKey("IdEffortTranchant");

                    b.ToTable("EffortTranchants");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.EffortsInternesDistanceX", b =>
                {
                    b.Property<int>("IdEffortsInternes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiagrammesEffortsInternesIdDiagrammeEffortsInternes")
                        .HasColumnType("INTEGER");

                    b.Property<double>("DistanceX")
                        .HasColumnType("REAL");

                    b.Property<double>("EffortNormalNed")
                        .HasColumnType("REAL");

                    b.Property<double>("EffortTranchanVAxeYDistanceX")
                        .HasColumnType("REAL");

                    b.Property<double>("EffortTranchanVAxeZDistanceX")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentMAxeYDistanceX")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentMAxeZDistanceX")
                        .HasColumnType("REAL");

                    b.HasKey("IdEffortsInternes");

                    b.HasIndex("DiagrammesEffortsInternesIdDiagrammeEffortsInternes");

                    b.ToTable("EffortsInternesDistanceX");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.Flambage", b =>
                {
                    b.Property<int>("IdFlambage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CoefficientElancementY")
                        .HasColumnType("REAL");

                    b.Property<double>("CoefficientElancementZ")
                        .HasColumnType("REAL");

                    b.Property<double>("ContrainteCritiqueAxeY")
                        .HasColumnType("REAL");

                    b.Property<double>("ContrainteCritiqueAxeZ")
                        .HasColumnType("REAL");

                    b.Property<double>("EffortNormalCritiqueAxeY")
                        .HasColumnType("REAL");

                    b.Property<double>("EffortNormalCritiqueAxeZ")
                        .HasColumnType("REAL");

                    b.Property<double>("ElancementLimiteelastique")
                        .HasColumnType("REAL");

                    b.Property<double>("FacteurReductionFlambageChikAxeY")
                        .HasColumnType("REAL");

                    b.Property<double>("FacteurReductionFlambageChikAxeZ")
                        .HasColumnType("REAL");

                    b.Property<double>("RésistanceFlambageAxeY")
                        .HasColumnType("REAL");

                    b.Property<double>("RésistanceFlambageAxeZ")
                        .HasColumnType("REAL");

                    b.HasKey("IdFlambage");

                    b.ToTable("Flambages");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.GeometrieIH", b =>
                {
                    b.Property<int>("IdGeometrieIH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AireAmeAvecConge")
                        .HasColumnType("REAL");

                    b.Property<double>("AireAmeSansConge")
                        .HasColumnType("REAL");

                    b.Property<double>("AireTotal")
                        .HasColumnType("REAL");

                    b.Property<double>("DistanceAilesProfile")
                        .HasColumnType("REAL");

                    b.Property<double>("EpaisseurAile")
                        .HasColumnType("REAL");

                    b.Property<double>("EpaisseurAme")
                        .HasColumnType("REAL");

                    b.Property<double>("Hauteur")
                        .HasColumnType("REAL");

                    b.Property<double>("HauteurPortionDroiteAme")
                        .HasColumnType("REAL");

                    b.Property<double>("Largeur")
                        .HasColumnType("REAL");

                    b.Property<double>("ModuleFlexionElastiqueAxeY")
                        .HasColumnType("REAL");

                    b.Property<double>("ModuleFlexionElastiqueAxeZ")
                        .HasColumnType("REAL");

                    b.Property<double>("ModuleFlexionMoyenAxe")
                        .HasColumnType("REAL");

                    b.Property<double>("ModuleFlexionPlastiqueAxeY")
                        .HasColumnType("REAL");

                    b.Property<double>("ModuleFlexionPlastiqueAxeZ")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentInertieAxeX")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentInertieAxeY")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentInertieAxeZ")
                        .HasColumnType("REAL");

                    b.Property<string>("NomGeometrieIH")
                        .HasColumnType("TEXT");

                    b.Property<double>("RayonConge")
                        .HasColumnType("REAL");

                    b.Property<double>("RayonGirationAxeY")
                        .HasColumnType("REAL");

                    b.Property<double>("RayonGirationAxeZ")
                        .HasColumnType("REAL");

                    b.HasKey("IdGeometrieIH");

                    b.ToTable("GeometrieIHs");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.MomentDeversementCTICM", b =>
                {
                    b.Property<int>("IdMomentDeversementCTICM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CoefficientChargeC1")
                        .HasColumnType("REAL");

                    b.Property<double>("CoefficientPositionChargeC2")
                        .HasColumnType("REAL");

                    b.Property<double>("ElancementReduitDeversement")
                        .HasColumnType("REAL");

                    b.Property<double>("FacteurReductionDeversementChi")
                        .HasColumnType("REAL");

                    b.Property<double>("LongueurCritiqueDeversement")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentCritiqueDeversement")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentExtremiteE")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentExtremiteO")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentResistantReduit")
                        .HasColumnType("REAL");

                    b.Property<double>("RapportMomentIsoMomentExtremiteMu")
                        .HasColumnType("REAL");

                    b.Property<double>("RapportMomentsExtremitePsi")
                        .HasColumnType("REAL");

                    b.HasKey("IdMomentDeversementCTICM");

                    b.ToTable("MomentDeversementCTICMs");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.MomentDeversementSIA", b =>
                {
                    b.Property<int>("IdMomentDeversementSIA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CoefficientMomentEta")
                        .HasColumnType("REAL");

                    b.Property<double>("ContrainteCritiqueDeversement")
                        .HasColumnType("REAL");

                    b.Property<double>("ContrainteTorsionNonUniforme")
                        .HasColumnType("REAL");

                    b.Property<double>("ContrainteTorsionUniforme")
                        .HasColumnType("REAL");

                    b.Property<double>("ElancementReduitDeversement")
                        .HasColumnType("REAL");

                    b.Property<double>("FacteurReductionDeversementChi")
                        .HasColumnType("REAL");

                    b.Property<double>("LongueurDeversementCritique")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentCritiqueDeversement")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentExtremiteE")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentExtremiteO")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentResistantReduit")
                        .HasColumnType("REAL");

                    b.Property<double>("RapportMomentsExtremitePsi")
                        .HasColumnType("REAL");

                    b.Property<double>("RayonGirationMembrureComprimée")
                        .HasColumnType("REAL");

                    b.HasKey("IdMomentDeversementSIA");

                    b.ToTable("MomentDeversementSIAs");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.MomentsFlexionnelResistant", b =>
                {
                    b.Property<int>("IdMomentsFlexionnelResistant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("EffortNormalResistant")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentFlexionResistantY")
                        .HasColumnType("REAL");

                    b.Property<double>("MomentFlexionResistantZ")
                        .HasColumnType("REAL");

                    b.Property<double>("PartEffortTranchantZ")
                        .HasColumnType("REAL");

                    b.HasKey("IdMomentsFlexionnelResistant");

                    b.ToTable("MomentsFlexionnelResistants");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.NuanceAcier", b =>
                {
                    b.Property<int>("IdNuance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("LimiteElastique")
                        .HasColumnType("REAL");

                    b.Property<double>("LimiteElastiqueCisaillement")
                        .HasColumnType("REAL");

                    b.Property<string>("NomNuance")
                        .HasColumnType("TEXT");

                    b.Property<double>("ResistanceTraction")
                        .HasColumnType("REAL");

                    b.HasKey("IdNuance");

                    b.ToTable("NuanceAciers");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.ProfileIH", b =>
                {
                    b.Property<int>("IdElement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("C1ConcMuNegsIdC1ConcMuNeg")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("C1ConcMuPosesIdC1ConcMuPos")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("C2ConcMuNegsIdC2ConcMuNeg")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("C2ConcMuPosesIdC2ConcMuPos")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClasseSectionCalculeIdClasseSection")
                        .HasColumnType("INTEGER");

                    b.Property<double>("CoefficientFlambageAxeY")
                        .HasColumnType("REAL");

                    b.Property<double>("CoefficientFlambageAxeZ")
                        .HasColumnType("REAL");

                    b.Property<int?>("DiagrammesEffortsInternesCalculeIdDiagrammeEffortsInternes")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EffortTranchantCalculeIdEffortTranchant")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FlambageCalculeIdFlambage")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GeometrieIHSelectionneeIdGeometrieIH")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Longueur")
                        .HasColumnType("REAL");

                    b.Property<int?>("MomentDeversementCTICMCalculeIdMomentDeversementCTICM")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MomentDeversementCTICMCalculeMinIdMomentDeversementCTICM")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MomentDeversementSIACalculeIdMomentDeversementSIA")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MomentDeversementSIACalculeMinIdMomentDeversementSIA")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MomentsFlexionnelResistantCalculesIdMomentsFlexionnelResistant")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomElement")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomEntier")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomPersonnalise")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NuanceAcierSelectionneeIdNuance")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("OmegaY1")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("OmegaZ1")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PositionnementCharge")
                        .HasColumnType("REAL");

                    b.Property<int?>("ResistanceSectionCalculeeIdResistanceSection")
                        .HasColumnType("INTEGER");

                    b.Property<double>("SectionNette")
                        .HasColumnType("REAL");

                    b.Property<int?>("StabiliteCalculeIdStabilite")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdElement");

                    b.HasIndex("C1ConcMuNegsIdC1ConcMuNeg");

                    b.HasIndex("C1ConcMuPosesIdC1ConcMuPos");

                    b.HasIndex("C2ConcMuNegsIdC2ConcMuNeg");

                    b.HasIndex("C2ConcMuPosesIdC2ConcMuPos");

                    b.HasIndex("ClasseSectionCalculeIdClasseSection");

                    b.HasIndex("DiagrammesEffortsInternesCalculeIdDiagrammeEffortsInternes");

                    b.HasIndex("EffortTranchantCalculeIdEffortTranchant");

                    b.HasIndex("FlambageCalculeIdFlambage");

                    b.HasIndex("GeometrieIHSelectionneeIdGeometrieIH");

                    b.HasIndex("MomentDeversementCTICMCalculeIdMomentDeversementCTICM");

                    b.HasIndex("MomentDeversementCTICMCalculeMinIdMomentDeversementCTICM");

                    b.HasIndex("MomentDeversementSIACalculeIdMomentDeversementSIA");

                    b.HasIndex("MomentDeversementSIACalculeMinIdMomentDeversementSIA");

                    b.HasIndex("MomentsFlexionnelResistantCalculesIdMomentsFlexionnelResistant");

                    b.HasIndex("NuanceAcierSelectionneeIdNuance");

                    b.HasIndex("ResistanceSectionCalculeeIdResistanceSection");

                    b.HasIndex("StabiliteCalculeIdStabilite");

                    b.ToTable("ProfileIHs");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.ResistanceSection", b =>
                {
                    b.Property<int>("IdResistanceSection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContraintesDeterminantesId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EffortsDeterminantsResistanceSectionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EquationUtiliseeResistanceSection")
                        .HasColumnType("TEXT");

                    b.Property<string>("Resultat")
                        .HasColumnType("TEXT");

                    b.Property<double>("ResultatResistanceSection")
                        .HasColumnType("REAL");

                    b.HasKey("IdResistanceSection");

                    b.HasIndex("ContraintesDeterminantesId");

                    b.HasIndex("EffortsDeterminantsResistanceSectionId");

                    b.ToTable("ResistanceSections");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.Stabilite", b =>
                {
                    b.Property<int>("IdStabilite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EquationUtiliseeStabilite")
                        .HasColumnType("TEXT");

                    b.Property<double>("OmegaY")
                        .HasColumnType("REAL");

                    b.Property<double>("OmegaZ")
                        .HasColumnType("REAL");

                    b.Property<string>("Resultat")
                        .HasColumnType("TEXT");

                    b.Property<double>("ResultatStabilite")
                        .HasColumnType("REAL");

                    b.HasKey("IdStabilite");

                    b.ToTable("Stabilites");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.ContraintesElastiques1PointYZ", b =>
                {
                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.ClasseSection", null)
                        .WithMany("ContraintesElastiquesMax")
                        .HasForeignKey("ClasseSectionCalculeIdClasseSection");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.DiagrammesEffortsInternes", b =>
                {
                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.CombinaisonCharges1D", "CombinaisonCharges1DSelectionnee")
                        .WithMany()
                        .HasForeignKey("CombinaisonCharges1DSelectionneeIdCombinaisonCharges")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CombinaisonCharges1DSelectionnee");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.EffortsInternesDistanceX", b =>
                {
                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.DiagrammesEffortsInternes", null)
                        .WithMany("EffortsInternesDistanceXes")
                        .HasForeignKey("DiagrammesEffortsInternesIdDiagrammeEffortsInternes");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.ProfileIH", b =>
                {
                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.CoefficientsCTICM.C1ConcMuNeg", "C1ConcMuNegs")
                        .WithMany()
                        .HasForeignKey("C1ConcMuNegsIdC1ConcMuNeg");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.CoefficientsCTICM.C1ConcMuPos", "C1ConcMuPoses")
                        .WithMany()
                        .HasForeignKey("C1ConcMuPosesIdC1ConcMuPos");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.CoefficientsCTICM.C2ConcMuNeg", "C2ConcMuNegs")
                        .WithMany()
                        .HasForeignKey("C2ConcMuNegsIdC2ConcMuNeg");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.CoefficientsCTICM.C2ConcMuPos", "C2ConcMuPoses")
                        .WithMany()
                        .HasForeignKey("C2ConcMuPosesIdC2ConcMuPos");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.ClasseSection", "ClasseSectionCalcule")
                        .WithMany()
                        .HasForeignKey("ClasseSectionCalculeIdClasseSection");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.DiagrammesEffortsInternes", "DiagrammesEffortsInternesCalcule")
                        .WithMany()
                        .HasForeignKey("DiagrammesEffortsInternesCalculeIdDiagrammeEffortsInternes");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.EffortTranchant", "EffortTranchantCalcule")
                        .WithMany()
                        .HasForeignKey("EffortTranchantCalculeIdEffortTranchant");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.Flambage", "FlambageCalcule")
                        .WithMany()
                        .HasForeignKey("FlambageCalculeIdFlambage");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.GeometrieIH", "GeometrieIHSelectionnee")
                        .WithMany()
                        .HasForeignKey("GeometrieIHSelectionneeIdGeometrieIH");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.MomentDeversementCTICM", "MomentDeversementCTICMCalcule")
                        .WithMany()
                        .HasForeignKey("MomentDeversementCTICMCalculeIdMomentDeversementCTICM");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.MomentDeversementCTICM", "MomentDeversementCTICMCalculeMin")
                        .WithMany()
                        .HasForeignKey("MomentDeversementCTICMCalculeMinIdMomentDeversementCTICM");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.MomentDeversementSIA", "MomentDeversementSIACalcule")
                        .WithMany()
                        .HasForeignKey("MomentDeversementSIACalculeIdMomentDeversementSIA");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.MomentDeversementSIA", "MomentDeversementSIACalculeMin")
                        .WithMany()
                        .HasForeignKey("MomentDeversementSIACalculeMinIdMomentDeversementSIA");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.MomentsFlexionnelResistant", "MomentsFlexionnelResistantCalcules")
                        .WithMany()
                        .HasForeignKey("MomentsFlexionnelResistantCalculesIdMomentsFlexionnelResistant");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.NuanceAcier", "NuanceAcierSelectionnee")
                        .WithMany()
                        .HasForeignKey("NuanceAcierSelectionneeIdNuance");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.ResistanceSection", "ResistanceSectionCalculee")
                        .WithMany()
                        .HasForeignKey("ResistanceSectionCalculeeIdResistanceSection");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.Stabilite", "StabiliteCalcule")
                        .WithMany()
                        .HasForeignKey("StabiliteCalculeIdStabilite");

                    b.Navigation("C1ConcMuNegs");

                    b.Navigation("C1ConcMuPoses");

                    b.Navigation("C2ConcMuNegs");

                    b.Navigation("C2ConcMuPoses");

                    b.Navigation("ClasseSectionCalcule");

                    b.Navigation("DiagrammesEffortsInternesCalcule");

                    b.Navigation("EffortTranchantCalcule");

                    b.Navigation("FlambageCalcule");

                    b.Navigation("GeometrieIHSelectionnee");

                    b.Navigation("MomentDeversementCTICMCalcule");

                    b.Navigation("MomentDeversementCTICMCalculeMin");

                    b.Navigation("MomentDeversementSIACalcule");

                    b.Navigation("MomentDeversementSIACalculeMin");

                    b.Navigation("MomentsFlexionnelResistantCalcules");

                    b.Navigation("NuanceAcierSelectionnee");

                    b.Navigation("ResistanceSectionCalculee");

                    b.Navigation("StabiliteCalcule");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.ResistanceSection", b =>
                {
                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.ContraintesElastiques1PointYZ", "ContraintesDeterminantes")
                        .WithMany()
                        .HasForeignKey("ContraintesDeterminantesId");

                    b.HasOne("TBAppAcierLibrairieClasses.Modeles.EffortsInternesDistanceX", "EffortsDeterminantsResistanceSection")
                        .WithMany()
                        .HasForeignKey("EffortsDeterminantsResistanceSectionId");

                    b.Navigation("ContraintesDeterminantes");

                    b.Navigation("EffortsDeterminantsResistanceSection");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.ClasseSection", b =>
                {
                    b.Navigation("ContraintesElastiquesMax");
                });

            modelBuilder.Entity("TBAppAcierLibrairieClasses.Modeles.DiagrammesEffortsInternes", b =>
                {
                    b.Navigation("EffortsInternesDistanceXes");
                });
#pragma warning restore 612, 618
        }
    }
}
